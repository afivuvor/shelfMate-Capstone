from flask import Flask, request, jsonify, send_from_directory, render_template
from flask_cors import CORS
import requests

app = Flask(__name__)
CORS(app)

OPEN_LIBRARY_API_BASE_URL = "https://openlibrary.org"

@app.route("/search", methods=['GET'])
def search_books():
    query = request.args.get("q")
    if not query:
        return jsonify({"error": "Missing 'q' parameter"}), 400

    params = {"q": query}
    response = requests.get(OPEN_LIBRARY_API_BASE_URL + "/search.json", params=params)

    if response.status_code == 200:
        data = response.json()
        return jsonify(data)
    else:
        return jsonify({"error": "Failed to search for books"}), response.status_code


@app.route("/isbn/<isbn>")
def get_book_data(isbn):
    response = requests.get(OPEN_LIBRARY_API_BASE_URL + f"/isbn/{isbn}.json")

    if response.status_code == 200:
        data = response.json()
        return jsonify(data)
    else:
        return jsonify({"error": "Failed to get book data"}), response.status_code

@app.route("/search/author")
def get_author():
    query = request.args.get("q")
    if not query:
        return jsonify({"error": "Missing 'q' parameter"}), 400

    params = {"q": query}
    response = requests.get(OPEN_LIBRARY_API_BASE_URL + "/search/authors.json", params=params)

    if response.status_code == 200:
        data = response.json()
        return jsonify(data)
    else:
        return jsonify({"error": "Failed to get author data"}), response.status_code

@app.route("/category/<category_name>")
def get_books_by_category(category_name):
    response = requests.get(OPEN_LIBRARY_API_BASE_URL + f"/subjects/{category_name}.json")

    if response.status_code == 200:
        data = response.json()
        return jsonify(data)
    else:
        return jsonify({"error": f"Failed to get books for category: {category_name}"}), response.status_code


if __name__ == "__main__":
    app.run(debug=True)
